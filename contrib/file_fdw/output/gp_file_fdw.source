--
-- Test foreign-data wrapper file_fdw. Greengage MPP specific
--
--
-- start_matchsubs
-- m/\(cost=.*\)/
-- s/\(cost=.*\)//
-- end_matchsubs
-- Clean up in case a prior regression run failed
SET client_min_messages TO 'error';
SET optimizer_trace_fallback = on;
DROP ROLE IF EXISTS file_fdw_superuser, file_fdw_user, no_priv_user;
RESET client_min_messages;
CREATE ROLE file_fdw_superuser LOGIN SUPERUSER; -- is a superuser
-- Install file_fdw
CREATE EXTENSION file_fdw;
-- file_fdw_superuser owns fdw-related objects
SET ROLE file_fdw_superuser;
CREATE SERVER file_server FOREIGN DATA WRAPPER file_fdw OPTIONS (mpp_execute 'any');
-- create user mappings and grant privilege to test users
SET ROLE file_fdw_superuser;
CREATE USER MAPPING FOR file_fdw_superuser SERVER file_server OPTIONS (mpp_execute 'coordinator'); -- error
ERROR:  invalid option "mpp_execute"
HINT:  There are no valid options in this context.
CREATE USER MAPPING FOR file_fdw_superuser SERVER file_server;
-- MPP tests
CREATE FOREIGN TABLE text_csv_any (
    word1 text, word2 text
) SERVER file_server
OPTIONS (format 'csv', filename '@abs_srcdir@/data/text.csv', mpp_execute 'any');
SELECT * FROM text_csv_any;
ERROR:  file_fdw does not support mpp_execute option 'any'
CREATE FOREIGN TABLE text_csv_all (
    word1 text, word2 text
) SERVER file_server
OPTIONS (format 'csv', filename '@abs_srcdir@/data/text<SEGID>.csv', mpp_execute 'all segments');
EXPLAIN SELECT * FROM text_csv_all ORDER BY word1;
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)  (cost=562.71..710.61 rows=10440 width=64)
   Merge Key: word1
   ->  Sort  (cost=562.71..571.41 rows=3480 width=64)
         Sort Key: word1
         ->  Foreign Scan on text_csv_all  (cost=0.00..358.00 rows=3480 width=64)
               Foreign File: @abs_srcdir@/data/text<SEGID>.csv
 Optimizer: Postgres-based planner
(7 rows)

SELECT * FROM text_csv_all ORDER BY word1;
 word1 | word2 
-------+-------
 AAA   | aaa
 BBB   | abc
 FOO   | bar
(3 rows)

-- Analyze 'all segments' option table when filename is like "text<SEGID>.csv"
Analyze text_csv_all;
CREATE FOREIGN TABLE text_csv_any_from_server (
    word1 text, word2 text
) SERVER file_server
OPTIONS (format 'csv', filename '@abs_srcdir@/data/text.csv');
SELECT * FROM text_csv_any_from_server;
ERROR:  file_fdw does not support mpp_execute option 'any'
CREATE FOREIGN TABLE text_csv_coordinator (
    word1 text, word2 text, a int, b int
) SERVER file_server
OPTIONS (format 'csv', filename '@abs_srcdir@/data/text.csv', mpp_execute 'coordinator');
-- Test append works both ways and generates valid plans. Should be able to execute
-- coordinator fdw on coordinator under redistribute
explain select word1 from text_csv_coordinator union all select word1 from text_csv_all;
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Append  (cost=0.00..550.56 rows=10442 width=32)
   ->  Foreign Scan on text_csv_coordinator  (cost=0.00..1.15 rows=2 width=32)
         Foreign File: @abs_srcdir@/data/text.csv
         Foreign File Size: 86 b
   ->  Gather Motion 3:1  (slice1; segments: 3)  (cost=0.00..497.20 rows=10440 width=32)
         ->  Foreign Scan on text_csv_all  (cost=0.00..358.00 rows=3480 width=32)
               Foreign File: @abs_srcdir@/data/text<SEGID>.csv
 Optimizer: Postgres-based planner
(8 rows)

select word1 from text_csv_coordinator union all select word1 from text_csv_all;
 word1 
-------
 AAA
 XYZ
 NULL
 NULL
 ABC
 AAA
 BBB
 FOO
(8 rows)

explain select word1 from text_csv_all union all select word1 from text_csv_coordinator;
                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 Append  (cost=0.00..550.56 rows=10442 width=32)
   ->  Gather Motion 3:1  (slice1; segments: 3)  (cost=0.00..497.20 rows=10440 width=32)
         ->  Foreign Scan on text_csv_all  (cost=0.00..358.00 rows=3480 width=32)
               Foreign File: @abs_srcdir@/file_fdw/data/text<SEGID>.csv
   ->  Foreign Scan on text_csv_coordinator  (cost=0.00..1.15 rows=2 width=32)
         Foreign File: @abs_srcdir@/file_fdw/data/text.csv
         Foreign File Size: 86 b
 Optimizer: Postgres-based planner
(8 rows)

select word1 from text_csv_all union all select word1 from text_csv_coordinator;
 word1 
-------
 AAA
 BBB
 FOO
 AAA
 XYZ
 NULL
 NULL
 ABC
(8 rows)

-- Test join with foreign scan under redistribute on coordinator works and doesn't hang
create table bar (a text);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greengage Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into bar values ('AAA'),('XYZ'),('hji');
analyze bar;
explain  select word1 from text_csv_coordinator ft1, bar where ft1.word1 = bar.a;
                                          QUERY PLAN                                           
-----------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)  (cost=1.02..2.26 rows=3 width=32)
   ->  Hash Join  (cost=1.02..2.22 rows=1 width=32)
         Hash Cond: (ft1.word1 = bar.a)
         ->  Redistribute Motion 1:3  (slice2)  (cost=0.00..1.18 rows=1 width=32)
               Hash Key: ft1.word1
               ->  Foreign Scan on text_csv_coordinator ft1  (cost=0.00..1.15 rows=2 width=32)
                     Foreign File: @abs_srcdir@/file_fdw/data/text.csv
                     Foreign File Size: 86 b
         ->  Hash  (cost=1.01..1.01 rows=1 width=4)
               ->  Seq Scan on bar  (cost=0.00..1.01 rows=1 width=4)
 Optimizer: Postgres-based planner
(11 rows)

select word1 from text_csv_coordinator ft1, bar where ft1.word1 = bar.a;
 word1 
-------
 AAA
 XYZ
(2 rows)

-- cleanup
DROP TABLE bar;
RESET ROLE;
DROP EXTENSION file_fdw CASCADE;
NOTICE:  drop cascades to 6 other objects
DETAIL:  drop cascades to server file_server
drop cascades to user mapping for file_fdw_superuser on server file_server
drop cascades to foreign table text_csv_any
drop cascades to foreign table text_csv_all
drop cascades to foreign table text_csv_any_from_server
drop cascades to foreign table text_csv_coordinator
DROP ROLE file_fdw_superuser;
