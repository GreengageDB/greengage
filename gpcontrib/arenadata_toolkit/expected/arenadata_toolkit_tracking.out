-- Tests for size tracking logic introduced in version 1.7
-- start_matchsubs
-- m/ERROR:  database \d+ is not tracked/
-- s/\d+/XXX/g
-- m/for database \d+ is empty/
-- s/\d+/XXX/g
-- end_matchsubs
CREATE DATABASE tracking_db1;
\c tracking_db1;
CREATE EXTENSION arenadata_toolkit;
-- 1. Test getting track on not registered database;
SELECT * FROM arenadata_toolkit.tables_track;
ERROR:  database 167165 is not tracked
HINT:  Call 'arenadata_toolkit.tracking_register_db()'to enable tracking
SELECT pg_sleep(current_setting('arenadata_toolkit.tracking_worker_naptime_sec')::int * 2);
 pg_sleep 
----------
 
(1 row)

SELECT arenadata_toolkit.tracking_register_db();
 tracking_register_db 
----------------------
 t
(1 row)

-- 2. Test initial snapshot behaviour. Triggering initial snapshot leads to
-- setting up the bloom filter such that all relfilenodes are considered.
SELECT arenadata_toolkit.tracking_trigger_initial_snapshot();
 tracking_trigger_initial_snapshot 
-----------------------------------
 t
(1 row)

SELECT is_triggered FROM arenadata_toolkit.is_initial_snapshot_triggered;
 is_triggered 
--------------
            1
(1 row)

-- 3. If user hasn't registered any schema, the default schemas are used.
-- See arenadata_toolkit_guc.c. At commit the bloom filter is cleared. The next
-- track acquisition will return nothing if database is not modified in between. 
-- Test track acquisition returns the same count of tuples as pg_class when
-- initial snapshot is triggered.
WITH segment_counts AS (
    SELECT tt.segid, COUNT(*) AS cnt 
    FROM arenadata_toolkit.tables_track tt 
    GROUP BY tt.segid
),
pg_class_count AS (
    SELECT COUNT(*) AS cnt FROM pg_class c JOIN pg_namespace n ON c.relnamespace = n.oid
    WHERE nspname = ANY (string_to_array(current_setting('arenadata_toolkit.tracking_schemas'), ','))
    AND c.relstorage = ANY (string_to_array(current_setting('arenadata_toolkit.tracking_relstorages'), ','))
    AND c.relkind = ANY (string_to_array(current_setting('arenadata_toolkit.tracking_relkinds'), ','))
)
SELECT bool_and(sc.cnt = pc.cnt)
FROM segment_counts sc, pg_class_count pc;
 bool_and 
----------
 t
(1 row)

-- 4. Create table in one of default schemas. Then unregister all
-- default schemas except this one.
CREATE TABLE arenadata_toolkit.tracking_t1 (i INT)
WITH (appendonly=true, orientation=column) DISTRIBUTED BY (i);
SELECT arenadata_toolkit.tracking_unregister_schema('information_schema');
 tracking_unregister_schema 
----------------------------
 t
(1 row)

SELECT arenadata_toolkit.tracking_unregister_schema('pg_aoseg');
 tracking_unregister_schema 
----------------------------
 t
(1 row)

SELECT arenadata_toolkit.tracking_unregister_schema('pg_toast');
 tracking_unregister_schema 
----------------------------
 t
(1 row)

SELECT arenadata_toolkit.tracking_unregister_schema('pg_catalog');
 tracking_unregister_schema 
----------------------------
 t
(1 row)

SELECT arenadata_toolkit.tracking_unregister_schema('public');
 tracking_unregister_schema 
----------------------------
 t
(1 row)

-- Getting the track. Only created table with size 0 is expected;
SELECT relname, size, state, segid, relkind, relstorage
FROM arenadata_toolkit.tables_track;
   relname   | size | state | segid | relkind | relstorage 
-------------+------+-------+-------+---------+------------
 tracking_t1 |    0 | a     |    -1 | r       | c
 tracking_t1 |    0 | a     |     2 | r       | c
 tracking_t1 |    0 | a     |     0 | r       | c
 tracking_t1 |    0 | a     |     1 | r       | c
(4 rows)

SELECT arenadata_toolkit.tracking_unregister_schema('arenadata_toolkit');
 tracking_unregister_schema 
----------------------------
 t
(1 row)

SELECT arenadata_toolkit.tracking_trigger_initial_snapshot();
 tracking_trigger_initial_snapshot 
-----------------------------------
 t
(1 row)

--Empty track is expected
SELECT relname, size, state, segid, relkind, relstorage
FROM arenadata_toolkit.tables_track;
WARNING:  One of the tracking parameters (schemas,relkinds, relstorages) for database 167165 is empty.
 relname | size | state | segid | relkind | relstorage 
---------+------+-------+-------+---------+------------
(0 rows)

SELECT arenadata_toolkit.tracking_register_schema('arenadata_toolkit');
 tracking_register_schema 
--------------------------
 t
(1 row)

-- 5. Test data extending event. Bloom should capture it.
INSERT INTO arenadata_toolkit.tracking_t1 SELECT generate_series(1,100000);
SELECT relname, size, state, segid, relkind, relstorage
FROM arenadata_toolkit.tables_track;
   relname   |  size  | state | segid | relkind | relstorage 
-------------+--------+-------+-------+---------+------------
 tracking_t1 | 133528 | a     |     1 | r       | c
 tracking_t1 | 134064 | a     |     0 | r       | c
 tracking_t1 | 133064 | a     |     2 | r       | c
(3 rows)

-- 6. Dropping table. The track shows only relfilenodes without names and other additional info with status 'd'.
DROP TABLE arenadata_toolkit.tracking_t1;
SELECT relname, size, state, segid, relkind, relstorage
FROM arenadata_toolkit.tables_track;
 relname | size | state | segid | relkind | relstorage 
---------+------+-------+-------+---------+------------
         |    0 | d     |    -1 |         | 
         |    0 | d     |    -1 |         | 
         |    0 | d     |    -1 |         | 
         |    0 | d     |    -1 |         | 
         |    0 | d     |     2 |         | 
         |    0 | d     |     2 |         | 
         |    0 | d     |     2 |         | 
         |    0 | d     |     2 |         | 
         |    0 | d     |     1 |         | 
         |    0 | d     |     1 |         | 
         |    0 | d     |     1 |         | 
         |    0 | d     |     1 |         | 
         |    0 | d     |     0 |         | 
         |    0 | d     |     0 |         | 
         |    0 | d     |     0 |         | 
         |    0 | d     |     0 |         | 
(16 rows)

-- 8. Test actions on commit and rollback
CREATE TABLE arenadata_toolkit.tracking_t1 (i INT)
WITH (appendonly=true, orientation=column) DISTRIBUTED BY (i);
INSERT INTO arenadata_toolkit.tracking_t1 SELECT generate_series(1,100000);
-- If the wrapping transaction rollbacks, the Bloom filter is not cleared up.
BEGIN;
SELECT relname, size, state, segid, relkind, relstorage
FROM arenadata_toolkit.tables_track;
   relname   |  size  | state | segid | relkind | relstorage 
-------------+--------+-------+-------+---------+------------
 tracking_t1 |      0 | a     |    -1 | r       | c
 tracking_t1 | 134064 | a     |     0 | r       | c
 tracking_t1 | 133528 | a     |     1 | r       | c
 tracking_t1 | 133064 | a     |     2 | r       | c
(4 rows)

ROLLBACK;
-- If commits, filter is cleared.
BEGIN;
SELECT relname, size, state, segid, relkind, relstorage
FROM arenadata_toolkit.tables_track;
   relname   |  size  | state | segid | relkind | relstorage 
-------------+--------+-------+-------+---------+------------
 tracking_t1 |      0 | a     |    -1 | r       | c
 tracking_t1 | 134064 | a     |     0 | r       | c
 tracking_t1 | 133528 | a     |     1 | r       | c
 tracking_t1 | 133064 | a     |     2 | r       | c
(4 rows)

COMMIT;
SELECT relname, size, state, segid, relkind, relstorage
FROM arenadata_toolkit.tables_track;
 relname | size | state | segid | relkind | relstorage 
---------+------+-------+-------+---------+------------
(0 rows)

-- 9. Test repetitive track call within the same transaction. All the
-- calls should return the same relation set.
INSERT INTO arenadata_toolkit.tracking_t1 SELECT generate_series(1,10000);
BEGIN;
SELECT relname, size, state, segid, relkind, relstorage
FROM arenadata_toolkit.tables_track;
   relname   |  size  | state | segid | relkind | relstorage 
-------------+--------+-------+-------+---------+------------
 tracking_t1 | 147576 | a     |     0 | r       | c
 tracking_t1 | 147112 | a     |     1 | r       | c
 tracking_t1 | 146096 | a     |     2 | r       | c
(3 rows)

CREATE TABLE arenadata_toolkit.tracking_t2 (j BIGINT) DISTRIBUTED BY (j);
INSERT INTO arenadata_toolkit.tracking_t2 SELECT generate_series(1,10000);
INSERT INTO arenadata_toolkit.tracking_t1 SELECT generate_series(1,10000);
SELECT relname, size, state, segid, relkind, relstorage
FROM arenadata_toolkit.tables_track;
   relname   |  size  | state | segid | relkind | relstorage 
-------------+--------+-------+-------+---------+------------
 tracking_t1 | 161088 | a     |     0 | r       | c
 tracking_t1 | 160696 | a     |     1 | r       | c
 tracking_t1 | 159128 | a     |     2 | r       | c
(3 rows)

ROLLBACK;
SELECT relname, size, state, segid, relkind, relstorage
FROM arenadata_toolkit.tables_track;
   relname   |  size  | state | segid | relkind | relstorage 
-------------+--------+-------+-------+---------+------------
             |      0 | d     |    -1 |         | 
             |      0 | d     |     0 |         | 
 tracking_t1 | 161088 | a     |     0 | r       | c
             |      0 | d     |     2 |         | 
 tracking_t1 | 159128 | a     |     2 | r       | c
             |      0 | d     |     1 |         | 
 tracking_t1 | 160696 | a     |     1 | r       | c
(7 rows)

-- 10. Test relkind filtering.
INSERT INTO arenadata_toolkit.tracking_t1 SELECT generate_series(1,100000);
CREATE INDEX ON arenadata_toolkit.tracking_t1(i);
-- Want to see index and block dir relation.
SELECT arenadata_toolkit.tracking_register_schema('pg_aoseg');
 tracking_register_schema 
--------------------------
 t
(1 row)

SELECT arenadata_toolkit.tracking_set_relkinds('o,i');
 tracking_set_relkinds 
-----------------------
 t
(1 row)

SELECT  size, state, segid, relkind, relstorage
FROM arenadata_toolkit.tables_track;
  size   | state | segid | relkind | relstorage 
---------+-------+-------+---------+------------
   32768 | a     |    -1 | i       | h
   32768 | a     |    -1 | i       | h
 1638400 | a     |     0 | i       | h
   65536 | a     |     0 | i       | h
 1638400 | a     |     1 | i       | h
   65536 | a     |     1 | i       | h
 1638400 | a     |     2 | i       | h
   65536 | a     |     2 | i       | h
(8 rows)

DROP TABLE arenadata_toolkit.tracking_t1;
-- Set empty relkinds. The track result set should be empty.
SELECT arenadata_toolkit.tracking_set_relkinds('');
 tracking_set_relkinds 
-----------------------
 t
(1 row)

SELECT arenadata_toolkit.tracking_trigger_initial_snapshot();
 tracking_trigger_initial_snapshot 
-----------------------------------
 t
(1 row)

SELECT  size, state, segid, relkind, relstorage
FROM arenadata_toolkit.tables_track;
WARNING:  One of the tracking parameters (schemas,relkinds, relstorages) for database 167165 is empty.
 size | state | segid | relkind | relstorage 
------+-------+-------+---------+------------
(0 rows)

-- Clean up
SELECT arenadata_toolkit.tracking_unregister_db();
 tracking_unregister_db 
------------------------
 t
(1 row)

\c contrib_regression;
DROP DATABASE tracking_db1;
