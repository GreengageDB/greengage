-- start_matchsubs
--
-- m/ERROR:  \[arenadata_toolkit\] exceeded maximum number of tracked databases \(track_files\.c:\d+\)/
-- s/\d+/XXX/g
--
-- end_matchsubs
--start_ignore
DROP DATABASE IF EXISTS tracking1;
NOTICE:  database "tracking1" does not exist, skipping
DROP DATABASE IF EXISTS tracking2;
NOTICE:  database "tracking2" does not exist, skipping
DROP DATABASE IF EXISTS tracking3;
NOTICE:  database "tracking3" does not exist, skipping
DROP DATABASE IF EXISTS tracking4;
NOTICE:  database "tracking4" does not exist, skipping
DROP DATABASE IF EXISTS tracking5;
NOTICE:  database "tracking5" does not exist, skipping
DROP DATABASE IF EXISTS tracking6;
NOTICE:  database "tracking6" does not exist, skipping
--end_ignore
-- Test database registering GUC.
CREATE DATABASE tracking1;
\c tracking1;
CREATE EXTENSION arenadata_toolkit;
SHOW arenadata_toolkit.tracking_is_db_tracked;
 arenadata_toolkit.tracking_is_db_tracked 
------------------------------------------
 off
(1 row)

SELECT datname, setconfig FROM pg_db_role_setting JOIN pg_database ON
setdatabase=oid WHERE datname=current_database();
 datname | setconfig 
---------+-----------
(0 rows)

SELECT arenadata_toolkit.tracking_register_db();
 tracking_register_db 
----------------------
 t
(1 row)

SHOW arenadata_toolkit.tracking_is_db_tracked;
 arenadata_toolkit.tracking_is_db_tracked 
------------------------------------------
 on
(1 row)

SELECT datname, setconfig FROM pg_db_role_setting JOIN pg_database ON
setdatabase=oid WHERE datname=current_database();
  datname  |                  setconfig                   
-----------+----------------------------------------------
 tracking1 | {arenadata_toolkit.tracking_is_db_tracked=t}
(1 row)

SELECT arenadata_toolkit.tracking_unregister_db();
 tracking_unregister_db 
------------------------
 t
(1 row)

SHOW arenadata_toolkit.tracking_is_db_tracked;
 arenadata_toolkit.tracking_is_db_tracked 
------------------------------------------
 off
(1 row)

SELECT datname, setconfig FROM pg_db_role_setting JOIN pg_database ON
setdatabase=oid WHERE datname=current_database();
  datname  |                  setconfig                   
-----------+----------------------------------------------
 tracking1 | {arenadata_toolkit.tracking_is_db_tracked=f}
(1 row)

-- Prohibit manual GUC setting.
SET arenadata_toolkit.tracking_is_db_tracked = true;
ERROR:  cannot change tracking status outside the tracking_register_db function
ALTER DATABASE tracking1 SET arenadata_toolkit.tracking_is_db_tracked = true;
ERROR:  cannot change tracking status outside the tracking_register_db function
-- Test limit of tracking databases.
SHOW arenadata_toolkit.tracking_db_track_count;
 arenadata_toolkit.tracking_db_track_count 
-------------------------------------------
 5
(1 row)

CREATE DATABASE tracking2;
CREATE DATABASE tracking3;
CREATE DATABASE tracking4;
CREATE DATABASE tracking5;
CREATE DATABASE tracking6;
DO $$
DECLARE
    db_oid oid;
BEGIN
    FOR db_oid IN 
        SELECT oid 
        FROM pg_database 
        WHERE datname IN ('tracking1', 'tracking2', 'tracking3',
        'tracking4', 'tracking5', 'tracking6')
    LOOP
        PERFORM arenadata_toolkit.tracking_register_db(db_oid);
    END LOOP;
END;
$$;
ERROR:  [arenadata_toolkit] exceeded maximum number of tracked databases (track_files.c:714)
CONTEXT:  SQL statement "SELECT arenadata_toolkit.tracking_register_db(db_oid)"
PL/pgSQL function inline_code_block line 11 at PERFORM
DO $$
DECLARE
    db_oid oid;
BEGIN
    FOR db_oid IN 
        SELECT oid 
        FROM pg_database 
        WHERE datname IN ('tracking1', 'tracking2', 'tracking3',
        'tracking4', 'tracking5', 'tracking6')
    LOOP
        PERFORM arenadata_toolkit.tracking_unregister_db(db_oid);
    END LOOP;
END;
$$;
DROP DATABASE IF EXISTS tracking2;
DROP DATABASE IF EXISTS tracking3;
DROP DATABASE IF EXISTS tracking4;
DROP DATABASE IF EXISTS tracking5;
DROP DATABASE IF EXISTS tracking6;
-- Test arenadata_toolkit.tracking_snapshot_on_recovery GUC
SELECT arenadata_toolkit.tracking_set_snapshot_on_recovery(true);
 tracking_set_snapshot_on_recovery 
-----------------------------------
 t
(1 row)

SELECT datname, setconfig FROM pg_db_role_setting JOIN pg_database ON
setdatabase=oid WHERE datname=current_database();
  datname  |                                           setconfig                                            
-----------+------------------------------------------------------------------------------------------------
 tracking1 | {arenadata_toolkit.tracking_is_db_tracked=f,arenadata_toolkit.tracking_snapshot_on_recovery=t}
(1 row)

-- Prohibit manual GUC setting.
SET arenadata_toolkit.tracking_snapshot_on_recovery = false;
ERROR:  cannot change tracking status outside the tracking_set_snapshot_on_recovery function
ALTER DATABASE tracking1 SET arenadata_toolkit.tracking_snapshot_on_recovery = false;
ERROR:  cannot change tracking status outside the tracking_set_snapshot_on_recovery function
-- Test arenadata_toolkit.tracking_relstorages GUC
SELECT arenadata_toolkit.tracking_set_relstorages('f,a,x');
 tracking_set_relstorages 
--------------------------
 t
(1 row)

SELECT datname, setconfig FROM pg_db_role_setting JOIN pg_database ON
setdatabase=oid WHERE datname=current_database();
  datname  |                                                                   setconfig                                                                   
-----------+-----------------------------------------------------------------------------------------------------------------------------------------------
 tracking1 | {arenadata_toolkit.tracking_is_db_tracked=f,arenadata_toolkit.tracking_snapshot_on_recovery=t,"arenadata_toolkit.tracking_relstorages=f,a,x"}
(1 row)

SELECT arenadata_toolkit.tracking_set_relstorages('v,v,v,,,');
 tracking_set_relstorages 
--------------------------
 t
(1 row)

SELECT datname, setconfig FROM pg_db_role_setting JOIN pg_database ON
setdatabase=oid WHERE datname=current_database();
  datname  |                                                                setconfig                                                                
-----------+-----------------------------------------------------------------------------------------------------------------------------------------
 tracking1 | {arenadata_toolkit.tracking_is_db_tracked=f,arenadata_toolkit.tracking_snapshot_on_recovery=t,arenadata_toolkit.tracking_relstorages=v}
(1 row)

SELECT arenadata_toolkit.tracking_set_relstorages('d,b,c');
ERROR:  Invalid relstorage type: d
HINT:  Valid relstorages are: 'h', 'x', 'a', 'v', 'c', 'f'
SELECT arenadata_toolkit.tracking_set_relstorages('');
 tracking_set_relstorages 
--------------------------
 t
(1 row)

SELECT datname, setconfig FROM pg_db_role_setting JOIN pg_database ON
setdatabase=oid WHERE datname=current_database();
  datname  |                                                               setconfig                                                                
-----------+----------------------------------------------------------------------------------------------------------------------------------------
 tracking1 | {arenadata_toolkit.tracking_is_db_tracked=f,arenadata_toolkit.tracking_snapshot_on_recovery=t,arenadata_toolkit.tracking_relstorages=}
(1 row)

-- Prohibit manual GUC setting.
SET arenadata_toolkit.tracking_relstorages = "h, a, x";
ERROR:  cannot change tracking status outside the tracking_register_relstorages function
ALTER DATABASE tracking1 SET arenadata_toolkit.tracking_relstorages = "h, a, x";
ERROR:  cannot change tracking status outside the tracking_register_relstorages function
-- Resetting case is allowed.
ALTER DATABASE tracking1 RESET arenadata_toolkit.tracking_relstorages;
-- Test arenadata_toolkit.tracking_relkinds GUC
SELECT arenadata_toolkit.tracking_set_relkinds('r,t,o,S');
 tracking_set_relkinds 
-----------------------
 t
(1 row)

SELECT datname, setconfig FROM pg_db_role_setting JOIN pg_database ON
setdatabase=oid WHERE datname=current_database();
  datname  |                                                                  setconfig                                                                   
-----------+----------------------------------------------------------------------------------------------------------------------------------------------
 tracking1 | {arenadata_toolkit.tracking_is_db_tracked=f,arenadata_toolkit.tracking_snapshot_on_recovery=t,"arenadata_toolkit.tracking_relkinds=r,t,o,S"}
(1 row)

SELECT arenadata_toolkit.tracking_set_relkinds('m,M,o,,,');
 tracking_set_relkinds 
-----------------------
 t
(1 row)

SELECT datname, setconfig FROM pg_db_role_setting JOIN pg_database ON
setdatabase=oid WHERE datname=current_database();
  datname  |                                                                 setconfig                                                                  
-----------+--------------------------------------------------------------------------------------------------------------------------------------------
 tracking1 | {arenadata_toolkit.tracking_is_db_tracked=f,arenadata_toolkit.tracking_snapshot_on_recovery=t,"arenadata_toolkit.tracking_relkinds=m,M,o"}
(1 row)

SELECT arenadata_toolkit.tracking_set_relkinds('d,b,c');
ERROR:  Invalid relkind: d
HINT:  Valid relkinds are: 'r', 'i', 'S', 't', 'v', 'c', 'f', 'u', 'm', 'o', 'b', 'M'
SELECT arenadata_toolkit.tracking_set_relkinds('');
 tracking_set_relkinds 
-----------------------
 t
(1 row)

SELECT datname, setconfig FROM pg_db_role_setting JOIN pg_database ON
setdatabase=oid WHERE datname=current_database();
  datname  |                                                              setconfig                                                              
-----------+-------------------------------------------------------------------------------------------------------------------------------------
 tracking1 | {arenadata_toolkit.tracking_is_db_tracked=f,arenadata_toolkit.tracking_snapshot_on_recovery=t,arenadata_toolkit.tracking_relkinds=}
(1 row)

-- Prohibit manual GUC setting.
SET arenadata_toolkit.tracking_relkinds = "h, a, x";
ERROR:  cannot change tracking status outside the tracking_register_relkinds function
ALTER DATABASE tracking1 SET arenadata_toolkit.tracking_relkinds = "h, a, x";
ERROR:  cannot change tracking status outside the tracking_register_relkinds function
-- Resetting case is allowed.
ALTER DATABASE tracking1 RESET arenadata_toolkit.tracking_relkinds;
-- Test arenadata_toolkit.tracking_schemas GUC
SELECT arenadata_toolkit.tracking_unregister_schema('public');
 tracking_unregister_schema 
----------------------------
 t
(1 row)

SELECT datname, setconfig FROM pg_db_role_setting JOIN pg_database ON
setdatabase=oid WHERE datname=current_database();
  datname  |                                                                                               setconfig                                                                                               
-----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 tracking1 | {arenadata_toolkit.tracking_is_db_tracked=f,arenadata_toolkit.tracking_snapshot_on_recovery=t,"arenadata_toolkit.tracking_schemas=arenadata_toolkit,pg_catalog,pg_toast,pg_aoseg,information_schema"}
(1 row)

SELECT arenadata_toolkit.tracking_register_schema('arenadata_toolkit');
 tracking_register_schema 
--------------------------
 t
(1 row)

SELECT arenadata_toolkit.tracking_register_schema('public');
 tracking_register_schema 
--------------------------
 t
(1 row)

SELECT datname, setconfig FROM pg_db_role_setting JOIN pg_database ON
setdatabase=oid WHERE datname=current_database();
  datname  |                                                                                                  setconfig                                                                                                   
-----------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 tracking1 | {arenadata_toolkit.tracking_is_db_tracked=f,arenadata_toolkit.tracking_snapshot_on_recovery=t,"arenadata_toolkit.tracking_schemas=arenadata_toolkit,pg_catalog,pg_toast,pg_aoseg,information_schema,public"}
(1 row)

SELECT arenadata_toolkit.tracking_unregister_schema('public');
 tracking_unregister_schema 
----------------------------
 t
(1 row)

SELECT datname, setconfig FROM pg_db_role_setting JOIN pg_database ON
setdatabase=oid WHERE datname=current_database();
  datname  |                                                                                               setconfig                                                                                               
-----------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 tracking1 | {arenadata_toolkit.tracking_is_db_tracked=f,arenadata_toolkit.tracking_snapshot_on_recovery=t,"arenadata_toolkit.tracking_schemas=arenadata_toolkit,pg_catalog,pg_toast,pg_aoseg,information_schema"}
(1 row)

SELECT arenadata_toolkit.tracking_register_schema('pg_pg');
ERROR:  schema pg_pg does not exist
-- Prohibit manual GUC setting.
SET arenadata_toolkit.tracking_schemas = "pg_catalog, mychema";
ERROR:  cannot change tracking status outside the tracking_register_schema function
ALTER DATABASE tracking1 SET arenadata_toolkit.tracking_schemas =  "pg_catalog, mychema";
ERROR:  cannot change tracking status outside the tracking_register_schema function
-- Resetting case is allowed.
ALTER DATABASE tracking1 RESET arenadata_toolkit.tracking_schemas;
-- Test GUCs are set in the caller's session.
SELECT arenadata_toolkit.tracking_register_db();
 tracking_register_db 
----------------------
 t
(1 row)

SHOW arenadata_toolkit.tracking_is_db_tracked;
 arenadata_toolkit.tracking_is_db_tracked 
------------------------------------------
 on
(1 row)

SELECT arenadata_toolkit.tracking_unregister_db();
 tracking_unregister_db 
------------------------
 t
(1 row)

SHOW arenadata_toolkit.tracking_is_db_tracked;
 arenadata_toolkit.tracking_is_db_tracked 
------------------------------------------
 off
(1 row)

SELECT arenadata_toolkit.tracking_set_snapshot_on_recovery(true);
 tracking_set_snapshot_on_recovery 
-----------------------------------
 t
(1 row)

SHOW arenadata_toolkit.tracking_snapshot_on_recovery;
 arenadata_toolkit.tracking_snapshot_on_recovery 
-------------------------------------------------
 on
(1 row)

SELECT arenadata_toolkit.tracking_set_snapshot_on_recovery(false);
 tracking_set_snapshot_on_recovery 
-----------------------------------
 t
(1 row)

SHOW arenadata_toolkit.tracking_snapshot_on_recovery;
 arenadata_toolkit.tracking_snapshot_on_recovery 
-------------------------------------------------
 off
(1 row)

SHOW arenadata_toolkit.tracking_schemas;
                arenadata_toolkit.tracking_schemas                 
-------------------------------------------------------------------
 arenadata_toolkit,pg_catalog,pg_toast,pg_aoseg,information_schema
(1 row)

SELECT arenadata_toolkit.tracking_register_schema('arenadata_toolkit');
 tracking_register_schema 
--------------------------
 t
(1 row)

SHOW arenadata_toolkit.tracking_schemas;
                    arenadata_toolkit.tracking_schemas                    
--------------------------------------------------------------------------
 public,arenadata_toolkit,pg_catalog,pg_toast,pg_aoseg,information_schema
(1 row)

SELECT arenadata_toolkit.tracking_unregister_schema('arenadata_toolkit');
 tracking_unregister_schema 
----------------------------
 t
(1 row)

SHOW arenadata_toolkit.tracking_schemas;
           arenadata_toolkit.tracking_schemas           
--------------------------------------------------------
 public,pg_catalog,pg_toast,pg_aoseg,information_schema
(1 row)

SHOW arenadata_toolkit.tracking_relkinds;
 arenadata_toolkit.tracking_relkinds 
-------------------------------------
 
(1 row)

SELECT arenadata_toolkit.tracking_set_relkinds('r,t');
 tracking_set_relkinds 
-----------------------
 t
(1 row)

SHOW arenadata_toolkit.tracking_relkinds;
 arenadata_toolkit.tracking_relkinds 
-------------------------------------
 r,t
(1 row)

SHOW arenadata_toolkit.tracking_relstorages;
 arenadata_toolkit.tracking_relstorages 
----------------------------------------
 
(1 row)

SELECT arenadata_toolkit.tracking_set_relstorages('a');
 tracking_set_relstorages 
--------------------------
 t
(1 row)

SHOW arenadata_toolkit.tracking_relstorages;
 arenadata_toolkit.tracking_relstorages 
----------------------------------------
 a
(1 row)

\c contrib_regression;
DROP DATABASE tracking1;
