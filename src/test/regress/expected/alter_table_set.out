-- https://github.com/GreengageDB/greengage/issues/1109
--
-- ALTER TABLE ... SET WITH (REORGANIZE = true); should always redistribute the
-- data even with matching distribution policy
create table ats_dist_by_c (c int, d int) distributed by (c);
create table ats_dist_by_d (c int, d int) distributed by (d);
insert into ats_dist_by_c select i, 0 from generate_series(1, 47) i;
copy ats_dist_by_c to '/tmp/ats_dist_by_c<SEGID>' on segment;
-- load the data back from the segment file, but wrong distribution
set gp_enable_segment_copy_checking = false;
show gp_enable_segment_copy_checking;
 gp_enable_segment_copy_checking 
---------------------------------
 off
(1 row)

copy ats_dist_by_d from '/tmp/ats_dist_by_c<SEGID>' on segment;
-- try to use the reorganize = true to fix it
alter table ats_dist_by_d set with (reorganize = true);
-- construct expected table
create table ats_expected_by_d (c int, d int) distributed by (d);
insert into ats_expected_by_d select * from ats_dist_by_c;
-- expect to see data distributed in the same way as the freshly constructed
-- table
select count(*) = 0 as has_same_distribution from
(select gp_segment_id, * from ats_dist_by_d except
	select gp_segment_id, * from ats_expected_by_d) t;
 has_same_distribution 
-----------------------
 t
(1 row)

-- reload for random distribution test
truncate table ats_dist_by_d;
copy ats_dist_by_d from '/tmp/ats_dist_by_c<SEGID>' on segment;
-- we expect the new random distribution to differ from both the
-- distributed-by-c table and the distributed-by-d table
alter table ats_dist_by_d set with (reorganize = true) distributed randomly;
select count(*) > 0 as has_different_distribution from
(select gp_segment_id, * from ats_dist_by_d except
	select gp_segment_id, * from ats_dist_by_c) t;
 has_different_distribution 
----------------------------
 t
(1 row)

select count(*) > 0 as has_different_distribution from
(select gp_segment_id, * from ats_dist_by_d except
	select gp_segment_id, * from ats_expected_by_d) t;
 has_different_distribution 
----------------------------
 t
(1 row)

-- ALTER TABLE ... SET for partition tables
PREPARE attribute_encoding_check AS
SELECT c.relname, a.attname, e.filenum, e.attoptions FROM pg_attribute_encoding e, pg_class c, pg_attribute a
WHERE e.attrelid = c.oid AND e.attnum = a.attnum and e.attrelid = a.attrelid AND c.relname LIKE $1;
CREATE TABLE part_relopt(a int, b int) WITH (fillfactor=90) PARTITION BY RANGE(a);
CREATE TABLE part_relopt_1 partition OF part_relopt FOR VALUES FROM (1) to (100);
CREATE TABLE part_relopt_2 partition OF part_relopt FOR VALUES FROM (100) to (200) PARTITION BY RANGE(a);
CREATE TABLE part_relopt_2_1 partition OF part_relopt_2 FOR VALUES FROM (100) to (150);
CREATE TABLE part_relopt_2_2 partition OF part_relopt_2 FOR VALUES FROM (150) to (200);
INSERT INTO part_relopt SELECT i,i FROM generate_series(1,199) i;
-- All tables inherit the same reloptions as the root.
SELECT c.relname, c.reloptions FROM pg_class c WHERE c.relname LIKE 'part_relopt%';
     relname     |   reloptions    
-----------------+-----------------
 part_relopt     | {fillfactor=90}
 part_relopt_1   | {fillfactor=90}
 part_relopt_2   | {fillfactor=90}
 part_relopt_2_1 | {fillfactor=90}
 part_relopt_2_2 | {fillfactor=90}
(5 rows)

-- Set reloptions of the root, all child including subpartitions should inherit them too.
ALTER TABLE part_relopt SET (fillfactor=80);
SELECT c.relname, c.reloptions FROM pg_class c WHERE c.relname LIKE 'part_relopt%';
     relname     |   reloptions    
-----------------+-----------------
 part_relopt     | {fillfactor=80}
 part_relopt_1   | {fillfactor=80}
 part_relopt_2   | {fillfactor=80}
 part_relopt_2_1 | {fillfactor=80}
 part_relopt_2_2 | {fillfactor=80}
(5 rows)

-- Altering it again with the same reloptions. Nothing should change.
ALTER TABLE part_relopt SET (fillfactor=80);
SELECT c.relname, c.reloptions FROM pg_class c WHERE c.relname LIKE 'part_relopt%';
     relname     |   reloptions    
-----------------+-----------------
 part_relopt     | {fillfactor=80}
 part_relopt_1   | {fillfactor=80}
 part_relopt_2   | {fillfactor=80}
 part_relopt_2_1 | {fillfactor=80}
 part_relopt_2_2 | {fillfactor=80}
(5 rows)

-- Altering a subpartition root, should apply and only apply to the subpartition root/child.
ALTER TABLE part_relopt_2 SET (fillfactor=70);
SELECT c.relname, c.reloptions FROM pg_class c WHERE c.relname LIKE 'part_relopt%';
     relname     |   reloptions    
-----------------+-----------------
 part_relopt     | {fillfactor=80}
 part_relopt_1   | {fillfactor=80}
 part_relopt_2   | {fillfactor=70}
 part_relopt_2_1 | {fillfactor=70}
 part_relopt_2_2 | {fillfactor=70}
(5 rows)

-- Altering the partition root but with ONLY keyword. Should affect future child but not affect existing child.
ALTER TABLE ONLY part_relopt SET (fillfactor=60);
CREATE TABLE part_relopt_3 partition OF part_relopt FOR VALUES FROM (200) to (300);
SELECT c.relname, c.reloptions FROM pg_class c WHERE c.relname LIKE 'part_relopt%';
     relname     |   reloptions    
-----------------+-----------------
 part_relopt     | {fillfactor=60}
 part_relopt_1   | {fillfactor=80}
 part_relopt_2   | {fillfactor=70}
 part_relopt_2_1 | {fillfactor=70}
 part_relopt_2_2 | {fillfactor=70}
 part_relopt_3   | {fillfactor=60}
(6 rows)

-- Altering one child partition, should only affect that child.
ALTER TABLE part_relopt_1 SET (fillfactor=50);
SELECT c.relname, c.reloptions FROM pg_class c WHERE c.relname LIKE 'part_relopt%';
     relname     |   reloptions    
-----------------+-----------------
 part_relopt     | {fillfactor=60}
 part_relopt_1   | {fillfactor=50}
 part_relopt_2   | {fillfactor=70}
 part_relopt_2_1 | {fillfactor=70}
 part_relopt_2_2 | {fillfactor=70}
 part_relopt_3   | {fillfactor=60}
(6 rows)

-- RESET one subpartition, then the entire hierarchy
ALTER TABLE part_relopt_2 RESET(fillfactor);
SELECT c.relname, c.reloptions FROM pg_class c WHERE c.relname LIKE 'part_relopt%';
     relname     |   reloptions    
-----------------+-----------------
 part_relopt     | {fillfactor=60}
 part_relopt_1   | {fillfactor=50}
 part_relopt_2   | 
 part_relopt_2_1 | 
 part_relopt_2_2 | 
 part_relopt_3   | {fillfactor=60}
(6 rows)

ALTER TABLE part_relopt RESET(fillfactor);
SELECT c.relname, c.reloptions FROM pg_class c WHERE c.relname LIKE 'part_relopt%';
     relname     | reloptions 
-----------------+------------
 part_relopt     | 
 part_relopt_1   | 
 part_relopt_2   | 
 part_relopt_2_1 | 
 part_relopt_2_2 | 
 part_relopt_3   | 
(6 rows)

-- Check setting reloptions for AO and AOCO tables too.
-- Also, for these tables we check pg_class and pg_attribute_encoding too.
-- AO table:
ALTER TABLE part_relopt SET ACCESS METHOD ao_row WITH (compresstype=zlib, compresslevel=5);
SELECT c.relname, am.amname, c.reloptions FROM pg_class c JOIN pg_am am on am.oid=c.relam WHERE c.relname LIKE 'part_relopt%';
     relname     | amname |                            reloptions                             
-----------------+--------+-------------------------------------------------------------------
 part_relopt     | ao_row | {compresstype=zlib,compresslevel=5}
 part_relopt_1   | ao_row | {compresstype=zlib,compresslevel=5,blocksize=32768,checksum=true}
 part_relopt_2   | ao_row | {compresstype=zlib,compresslevel=5}
 part_relopt_2_1 | ao_row | {compresstype=zlib,compresslevel=5,blocksize=32768,checksum=true}
 part_relopt_2_2 | ao_row | {compresstype=zlib,compresslevel=5,blocksize=32768,checksum=true}
 part_relopt_3   | ao_row | {compresstype=zlib,compresslevel=5,blocksize=32768,checksum=true}
(6 rows)

ALTER TABLE part_relopt SET (compresslevel=7);
SELECT c.relname, am.amname, c.reloptions FROM pg_class c JOIN pg_am am on am.oid=c.relam WHERE c.relname LIKE 'part_relopt%';
     relname     | amname |                            reloptions                             
-----------------+--------+-------------------------------------------------------------------
 part_relopt     | ao_row | {compresstype=zlib,compresslevel=7}
 part_relopt_1   | ao_row | {compresstype=zlib,blocksize=32768,checksum=true,compresslevel=7}
 part_relopt_2   | ao_row | {compresstype=zlib,compresslevel=7}
 part_relopt_2_1 | ao_row | {compresstype=zlib,blocksize=32768,checksum=true,compresslevel=7}
 part_relopt_2_2 | ao_row | {compresstype=zlib,blocksize=32768,checksum=true,compresslevel=7}
 part_relopt_3   | ao_row | {compresstype=zlib,blocksize=32768,checksum=true,compresslevel=7}
(6 rows)

--AOCO table: Also check setting column encoding
ALTER TABLE part_relopt SET ACCESS METHOD ao_column WITH (compresstype=rle_type, compresslevel=1), ALTER COLUMN a SET ENCODING (compresstype=rle_type, compresslevel=2), ALTER COLUMN b SET ENCODING (compresstype=zlib, compresslevel=3);
SELECT c.relname, am.amname, c.reloptions FROM pg_class c JOIN pg_am am on am.oid=c.relam WHERE c.relname LIKE 'part_relopt%';
     relname     |  amname   |                              reloptions                               
-----------------+-----------+-----------------------------------------------------------------------
 part_relopt     | ao_column | {compresstype=rle_type,compresslevel=1}
 part_relopt_1   | ao_column | {compresstype=rle_type,compresslevel=1,blocksize=32768,checksum=true}
 part_relopt_2   | ao_column | {compresstype=rle_type,compresslevel=1}
 part_relopt_2_1 | ao_column | {compresstype=rle_type,compresslevel=1,blocksize=32768,checksum=true}
 part_relopt_2_2 | ao_column | {compresstype=rle_type,compresslevel=1,blocksize=32768,checksum=true}
 part_relopt_3   | ao_column | {compresstype=rle_type,compresslevel=1,blocksize=32768,checksum=true}
(6 rows)

execute attribute_encoding_check('part_relopt%');
     relname     | attname | filenum |                       attoptions                        
-----------------+---------+---------+---------------------------------------------------------
 part_relopt     | a       |       1 | {compresstype=rle_type,compresslevel=2,blocksize=32768}
 part_relopt     | b       |       2 | {compresstype=zlib,compresslevel=3,blocksize=32768}
 part_relopt_1   | a       |       1 | {compresstype=rle_type,compresslevel=2,blocksize=32768}
 part_relopt_1   | b       |       2 | {compresstype=zlib,compresslevel=3,blocksize=32768}
 part_relopt_2   | a       |       1 | {compresstype=rle_type,compresslevel=2,blocksize=32768}
 part_relopt_2   | b       |       2 | {compresstype=zlib,compresslevel=3,blocksize=32768}
 part_relopt_2_1 | a       |       1 | {compresstype=rle_type,compresslevel=2,blocksize=32768}
 part_relopt_2_1 | b       |       2 | {compresstype=zlib,compresslevel=3,blocksize=32768}
 part_relopt_2_2 | a       |       1 | {compresstype=rle_type,compresslevel=2,blocksize=32768}
 part_relopt_2_2 | b       |       2 | {compresstype=zlib,compresslevel=3,blocksize=32768}
 part_relopt_3   | a       |       1 | {compresstype=rle_type,compresslevel=2,blocksize=32768}
 part_relopt_3   | b       |       2 | {compresstype=zlib,compresslevel=3,blocksize=32768}
(12 rows)

ALTER TABLE part_relopt SET (compresslevel=3);
SELECT c.relname, am.amname, c.reloptions FROM pg_class c JOIN pg_am am on am.oid=c.relam WHERE c.relname LIKE 'part_relopt%';
     relname     |  amname   |                              reloptions                               
-----------------+-----------+-----------------------------------------------------------------------
 part_relopt     | ao_column | {compresstype=rle_type,compresslevel=3}
 part_relopt_1   | ao_column | {compresstype=rle_type,blocksize=32768,checksum=true,compresslevel=3}
 part_relopt_2   | ao_column | {compresstype=rle_type,compresslevel=3}
 part_relopt_2_1 | ao_column | {compresstype=rle_type,blocksize=32768,checksum=true,compresslevel=3}
 part_relopt_2_2 | ao_column | {compresstype=rle_type,blocksize=32768,checksum=true,compresslevel=3}
 part_relopt_3   | ao_column | {compresstype=rle_type,blocksize=32768,checksum=true,compresslevel=3}
(6 rows)

execute attribute_encoding_check('part_relopt%');
     relname     | attname | filenum |                       attoptions                        
-----------------+---------+---------+---------------------------------------------------------
 part_relopt     | a       |       1 | {compresstype=rle_type,compresslevel=2,blocksize=32768}
 part_relopt     | b       |       2 | {compresstype=zlib,compresslevel=3,blocksize=32768}
 part_relopt_1   | a       |       1 | {compresstype=rle_type,compresslevel=2,blocksize=32768}
 part_relopt_1   | b       |       2 | {compresstype=zlib,compresslevel=3,blocksize=32768}
 part_relopt_2   | a       |       1 | {compresstype=rle_type,compresslevel=2,blocksize=32768}
 part_relopt_2   | b       |       2 | {compresstype=zlib,compresslevel=3,blocksize=32768}
 part_relopt_2_1 | a       |       1 | {compresstype=rle_type,compresslevel=2,blocksize=32768}
 part_relopt_2_1 | b       |       2 | {compresstype=zlib,compresslevel=3,blocksize=32768}
 part_relopt_2_2 | a       |       1 | {compresstype=rle_type,compresslevel=2,blocksize=32768}
 part_relopt_2_2 | b       |       2 | {compresstype=zlib,compresslevel=3,blocksize=32768}
 part_relopt_3   | a       |       1 | {compresstype=rle_type,compresslevel=2,blocksize=32768}
 part_relopt_3   | b       |       2 | {compresstype=zlib,compresslevel=3,blocksize=32768}
(12 rows)

ALTER TABLE part_relopt ALTER COLUMN a SET ENCODING (compresstype=rle_type, compresslevel=4), ALTER COLUMN b SET ENCODING (compresstype=zlib, compresslevel=5);
execute attribute_encoding_check('part_relopt%');
     relname     | attname | filenum |                       attoptions                        
-----------------+---------+---------+---------------------------------------------------------
 part_relopt     | a       |       1 | {compresstype=rle_type,compresslevel=4,blocksize=32768}
 part_relopt     | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_1   | a       |    1601 | {compresstype=rle_type,compresslevel=4,blocksize=32768}
 part_relopt_1   | b       |    1602 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2   | a       |       1 | {compresstype=rle_type,compresslevel=4,blocksize=32768}
 part_relopt_2   | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2_1 | a       |    1601 | {compresstype=rle_type,compresslevel=4,blocksize=32768}
 part_relopt_2_1 | b       |    1602 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2_2 | a       |    1601 | {compresstype=rle_type,compresslevel=4,blocksize=32768}
 part_relopt_2_2 | b       |    1602 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_3   | a       |    1601 | {compresstype=rle_type,compresslevel=4,blocksize=32768}
 part_relopt_3   | b       |    1602 | {compresstype=zlib,compresslevel=5,blocksize=32768}
(12 rows)

-- Check double edit on same column
ALTER TABLE part_relopt ALTER COLUMN a SET ENCODING (compresstype=rle_type, compresslevel=4), ALTER COLUMN a SET ENCODING (compresstype=zlib, compresslevel=5);
execute attribute_encoding_check('part_relopt%');
     relname     | attname | filenum |                     attoptions                      
-----------------+---------+---------+-----------------------------------------------------
 part_relopt     | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt     | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_1   | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_1   | b       |    1602 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2   | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2   | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2_1 | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2_1 | b       |    1602 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2_2 | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2_2 | b       |    1602 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_3   | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_3   | b       |    1602 | {compresstype=zlib,compresslevel=5,blocksize=32768}
(12 rows)

-- Check double edit of same option
ALTER TABLE part_relopt ALTER COLUMN a SET ENCODING (compresslevel=3, compresslevel=4);
ERROR:  parameter "compresslevel" specified more than once
execute attribute_encoding_check('part_relopt%');
     relname     | attname | filenum |                     attoptions                      
-----------------+---------+---------+-----------------------------------------------------
 part_relopt     | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt     | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_1   | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_1   | b       |    1602 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2   | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2   | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2_1 | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2_1 | b       |    1602 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2_2 | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2_2 | b       |    1602 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_3   | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_3   | b       |    1602 | {compresstype=zlib,compresslevel=5,blocksize=32768}
(12 rows)

-- Check double edit of same column different options
ALTER TABLE part_relopt ALTER COLUMN a SET ENCODING (compresstype=zlib), ALTER COLUMN a SET ENCODING (compresslevel=7);
execute attribute_encoding_check('part_relopt%');
     relname     | attname | filenum |                     attoptions                      
-----------------+---------+---------+-----------------------------------------------------
 part_relopt     | a       |       1 | {compresstype=zlib,compresslevel=7,blocksize=32768}
 part_relopt     | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_1   | a       |    1601 | {compresstype=zlib,compresslevel=7,blocksize=32768}
 part_relopt_1   | b       |    1602 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2   | a       |       1 | {compresstype=zlib,compresslevel=7,blocksize=32768}
 part_relopt_2   | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2_1 | a       |    1601 | {compresstype=zlib,compresslevel=7,blocksize=32768}
 part_relopt_2_1 | b       |    1602 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2_2 | a       |    1601 | {compresstype=zlib,compresslevel=7,blocksize=32768}
 part_relopt_2_2 | b       |    1602 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_3   | a       |    1601 | {compresstype=zlib,compresslevel=7,blocksize=32768}
 part_relopt_3   | b       |    1602 | {compresstype=zlib,compresslevel=5,blocksize=32768}
(12 rows)

ALTER TABLE part_relopt ALTER COLUMN a SET ENCODING (compresstype=zlib, compresslevel=5);
execute attribute_encoding_check('part_relopt%');
     relname     | attname | filenum |                     attoptions                      
-----------------+---------+---------+-----------------------------------------------------
 part_relopt     | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt     | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_1   | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_1   | b       |    1602 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2   | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2   | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2_1 | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2_1 | b       |    1602 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2_2 | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_2_2 | b       |    1602 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_3   | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt_3   | b       |    1602 | {compresstype=zlib,compresslevel=5,blocksize=32768}
(12 rows)

-- Data is intact
SELECT * from part_relopt order by a limit 10;
 a  | b  
----+----
  1 |  1
  2 |  2
  3 |  3
  4 |  4
  5 |  5
  6 |  6
  7 |  7
  8 |  8
  9 |  9
 10 | 10
(10 rows)

SELECT count(*) FROM part_relopt;
 count 
-------
   199
(1 row)

-- with empty segfiles
CREATE TABLE aoco_relopt(a int, b int) WITH (appendoptimized = true, orientation = column);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greengage Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
ALTER TABLE aoco_relopt ALTER COLUMN a SET ENCODING (compresstype=rle_type, compresslevel=4), ALTER COLUMN b SET ENCODING (compresstype=zlib, compresslevel=5);
execute attribute_encoding_check('aoco_relopt%');
   relname   | attname | filenum |                       attoptions                        
-------------+---------+---------+---------------------------------------------------------
 aoco_relopt | a       |    1601 | {compresstype=rle_type,blocksize=32768,compresslevel=4}
 aoco_relopt | b       |    1602 | {compresstype=zlib,blocksize=32768,compresslevel=5}
(2 rows)

DROP TABLE aoco_relopt;
-- Check mixed AMs in the partition hierarchy. Currently we error out.
CREATE TABLE part_relopt2(a int, b int) PARTITION BY RANGE(a);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greengage Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE part_relopt2_1 partition OF part_relopt2 FOR VALUES FROM (100) to (200);
NOTICE:  table has parent, setting distribution columns to match parent table
CREATE TABLE part_relopt2_2 partition OF part_relopt2 FOR VALUES FROM (200) to (300) PARTITION BY RANGE (a);
NOTICE:  table has parent, setting distribution columns to match parent table
CREATE TABLE part_relopt2_2_1 partition OF part_relopt2_2 FOR VALUES FROM (200) to (250);
NOTICE:  table has parent, setting distribution columns to match parent table
-- error out because of the first child
ALTER TABLE part_relopt2_1 SET ACCESS METHOD ao_row;
ALTER TABLE part_relopt2 SET (fillfactor=70);
ERROR:  cannot alter reloptions for "part_relopt2" because one of the child tables "part_relopt2_1" has different access method
HINT:  Alter tables individually or change the child's AM to be same as parent.
-- check subpartition too: error out because of the subpartition child
ALTER TABLE part_relopt2_1 SET ACCESS METHOD heap;
ALTER TABLE part_relopt2_2_1 SET ACCESS METHOD ao_row;
ALTER TABLE part_relopt2 SET (fillfactor=70);
ERROR:  cannot alter reloptions for "part_relopt2" because one of the child tables "part_relopt2_2_1" has different access method
HINT:  Alter tables individually or change the child's AM to be same as parent.
-- SET individual child, and check if RESET works.
ALTER TABLE part_relopt2_1 SET (fillfactor=70);
ALTER TABLE part_relopt2_2_1 SET (blocksize=65536);
SELECT c.relname, c.reloptions FROM pg_class c WHERE c.relname = 'part_relopt2_1' OR c.relname = 'part_relopt2_2_1';
     relname      |                            reloptions                             
------------------+-------------------------------------------------------------------
 part_relopt2_1   | {fillfactor=70}
 part_relopt2_2_1 | {compresslevel=0,compresstype=none,checksum=true,blocksize=65536}
(2 rows)

ALTER TABLE part_relopt2 RESET(fillfactor);
SELECT c.relname, c.reloptions FROM pg_class c WHERE c.relname = 'part_relopt2_1' OR c.relname = 'part_relopt2_2_1';
     relname      |                            reloptions                             
------------------+-------------------------------------------------------------------
 part_relopt2_1   | 
 part_relopt2_2_1 | {compresslevel=0,compresstype=none,checksum=true,blocksize=65536}
(2 rows)

ALTER TABLE part_relopt2 RESET(blocksize);
SELECT c.relname, c.reloptions FROM pg_class c WHERE c.relname = 'part_relopt2_1' OR c.relname = 'part_relopt2_2_1';
     relname      |                            reloptions                             
------------------+-------------------------------------------------------------------
 part_relopt2_1   | 
 part_relopt2_2_1 | {compresslevel=0,compresstype=none,checksum=true,blocksize=32768}
(2 rows)

DROP TABLE part_relopt2;
-- Check mixed AM aoco column encoding
CREATE TABLE part_relopt3(a int, b int) WITH (appendoptimized = true, orientation = column, compresstype=zlib, compresslevel=5) PARTITION BY RANGE(a);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greengage Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE part_relopt3_1 partition OF part_relopt3 FOR VALUES FROM (100) to (200);
NOTICE:  table has parent, setting distribution columns to match parent table
CREATE TABLE part_relopt3_2 partition OF part_relopt3 FOR VALUES FROM (200) to (300) PARTITION BY RANGE (a);
NOTICE:  table has parent, setting distribution columns to match parent table
CREATE TABLE part_relopt3_2_1 partition OF part_relopt3_2 FOR VALUES FROM (200) to (250);
NOTICE:  table has parent, setting distribution columns to match parent table
INSERT INTO part_relopt3 SELECT i,i FROM generate_series(101,249) i;
execute attribute_encoding_check('part_relopt3%');
     relname      | attname | filenum |                     attoptions                      
------------------+---------+---------+-----------------------------------------------------
 part_relopt3     | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3     | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_1   | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_1   | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_2   | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_2   | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_2_1 | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_2_1 | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
(8 rows)

-- error out because of the first child
ALTER TABLE part_relopt3_1 SET ACCESS METHOD heap;
ALTER TABLE part_relopt3 ALTER COLUMN a SET ENCODING (compresslevel=3, compresstype=zlib);
ERROR:  ALTER COLUMN SET ENCODING operation is only applicable to AOCO tables
DETAIL:  "part_relopt3_1" is not an AOCO table
-- check subpartition too: error out because of the subpartition child
ALTER TABLE part_relopt3_1 SET ACCESS METHOD ao_column;
ALTER TABLE part_relopt3_2_1 SET ACCESS METHOD heap;
ALTER TABLE part_relopt3 ALTER COLUMN a SET ENCODING (compresslevel=3, compresstype=zlib);
ERROR:  ALTER COLUMN SET ENCODING operation is only applicable to AOCO tables
DETAIL:  "part_relopt3_2_1" is not an AOCO table
execute attribute_encoding_check('part_relopt3%');
    relname     | attname | filenum |                     attoptions                      
----------------+---------+---------+-----------------------------------------------------
 part_relopt3   | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3   | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_1 | a       |       1 | {compresstype=none,blocksize=32768,compresslevel=0}
 part_relopt3_1 | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
 part_relopt3_2 | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_2 | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
(6 rows)

ALTER TABLE part_relopt3_1 ALTER COLUMN a SET ENCODING (compresslevel=3, compresstype=zlib);
execute attribute_encoding_check('part_relopt3%');
    relname     | attname | filenum |                     attoptions                      
----------------+---------+---------+-----------------------------------------------------
 part_relopt3   | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3   | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_1 | a       |    1601 | {compresstype=zlib,blocksize=32768,compresslevel=3}
 part_relopt3_1 | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
 part_relopt3_2 | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_2 | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
(6 rows)

ALTER TABLE part_relopt3_2_1 SET ACCESS METHOD ao_column, ALTER COLUMN a SET ENCODING (compresslevel=4, compresstype=zlib);
execute attribute_encoding_check('part_relopt3%');
     relname      | attname | filenum |                     attoptions                      
------------------+---------+---------+-----------------------------------------------------
 part_relopt3     | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3     | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_1   | a       |    1601 | {compresstype=zlib,blocksize=32768,compresslevel=3}
 part_relopt3_1   | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
 part_relopt3_2   | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_2   | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_2_1 | a       |       1 | {compresslevel=4,compresstype=zlib,blocksize=32768}
 part_relopt3_2_1 | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
(8 rows)

ALTER TABLE part_relopt3_2 ALTER COLUMN a SET ENCODING (compresslevel=1, compresstype=rle_type);
execute attribute_encoding_check('part_relopt3%');
     relname      | attname | filenum |                       attoptions                        
------------------+---------+---------+---------------------------------------------------------
 part_relopt3     | a       |       1 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3     | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_1   | a       |    1601 | {compresstype=zlib,blocksize=32768,compresslevel=3}
 part_relopt3_1   | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
 part_relopt3_2   | a       |       1 | {compresstype=rle_type,compresslevel=1,blocksize=32768}
 part_relopt3_2   | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_2_1 | a       |    1601 | {compresslevel=1,compresstype=rle_type,blocksize=32768}
 part_relopt3_2_1 | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
(8 rows)

ALTER TABLE part_relopt3 ALTER COLUMN a SET ENCODING (compresslevel=4, compresstype=rle_type);
execute attribute_encoding_check('part_relopt3%');
     relname      | attname | filenum |                       attoptions                        
------------------+---------+---------+---------------------------------------------------------
 part_relopt3     | a       |       1 | {compresstype=rle_type,compresslevel=4,blocksize=32768}
 part_relopt3     | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_1   | a       |       1 | {compresstype=rle_type,blocksize=32768,compresslevel=4}
 part_relopt3_1   | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
 part_relopt3_2   | a       |       1 | {compresstype=rle_type,compresslevel=4,blocksize=32768}
 part_relopt3_2   | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_2_1 | a       |       1 | {compresslevel=4,compresstype=rle_type,blocksize=32768}
 part_relopt3_2_1 | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
(8 rows)

-- Check if table is rewritten if encoding doesn't change
CREATE TEMP TABLE relfilebeforeredo AS
SELECT -1 segid, relname, relfilenode FROM pg_class WHERE relname LIKE 'part_relopt3%'
UNION SELECT gp_segment_id segid, relname, relfilenode FROM gp_dist_random('pg_class')
WHERE relname LIKE 'part_relopt3%' ORDER BY segid;
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'segid' as the Greengage Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
ALTER TABLE part_relopt3 ALTER COLUMN a SET ENCODING (compresslevel=4, compresstype=rle_type);
execute attribute_encoding_check('part_relopt3%');
     relname      | attname | filenum |                       attoptions                        
------------------+---------+---------+---------------------------------------------------------
 part_relopt3     | a       |       1 | {compresstype=rle_type,compresslevel=4,blocksize=32768}
 part_relopt3     | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_1   | a       |       1 | {compresstype=rle_type,blocksize=32768,compresslevel=4}
 part_relopt3_1   | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
 part_relopt3_2   | a       |       1 | {compresstype=rle_type,compresslevel=4,blocksize=32768}
 part_relopt3_2   | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_2_1 | a       |       1 | {compresslevel=4,compresstype=rle_type,blocksize=32768}
 part_relopt3_2_1 | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
(8 rows)

CREATE TEMP TABLE relfileafterredo AS
SELECT -1 segid, relname, relfilenode FROM pg_class WHERE relname LIKE 'part_relopt3%'
UNION SELECT gp_segment_id segid, relname, relfilenode FROM gp_dist_random('pg_class')
WHERE relname LIKE 'part_relopt3%' ORDER BY segid;
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column(s) named 'segid' as the Greengage Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
-- Alter table shouldn't have rewritten the table since the options aren't changing
SELECT * FROM relfilebeforeredo EXCEPT SELECT * FROM relfileafterredo;
 segid | relname | relfilenode 
-------+---------+-------------
(0 rows)

-- Check alter column set encoding for root partition ONLY
ALTER TABLE ONLY part_relopt3 ALTER COLUMN a SET ENCODING (compresslevel=2, compresstype=zlib);
execute attribute_encoding_check('part_relopt3%');
     relname      | attname | filenum |                       attoptions                        
------------------+---------+---------+---------------------------------------------------------
 part_relopt3     | a       |       1 | {compresstype=zlib,compresslevel=2,blocksize=32768}
 part_relopt3     | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_1   | a       |       1 | {compresstype=rle_type,blocksize=32768,compresslevel=4}
 part_relopt3_1   | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
 part_relopt3_2   | a       |       1 | {compresstype=rle_type,compresslevel=4,blocksize=32768}
 part_relopt3_2   | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_2_1 | a       |       1 | {compresslevel=4,compresstype=rle_type,blocksize=32768}
 part_relopt3_2_1 | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
(8 rows)

-- Check alter column set encoding for mid level root partition ONLY
ALTER TABLE ONLY part_relopt3_2 ALTER COLUMN a SET ENCODING (compresslevel=3, compresstype=zlib);
execute attribute_encoding_check('part_relopt3%');
     relname      | attname | filenum |                       attoptions                        
------------------+---------+---------+---------------------------------------------------------
 part_relopt3     | a       |       1 | {compresstype=zlib,compresslevel=2,blocksize=32768}
 part_relopt3     | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_1   | a       |       1 | {compresstype=rle_type,blocksize=32768,compresslevel=4}
 part_relopt3_1   | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
 part_relopt3_2   | a       |       1 | {compresstype=zlib,compresslevel=3,blocksize=32768}
 part_relopt3_2   | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_2_1 | a       |       1 | {compresslevel=4,compresstype=rle_type,blocksize=32768}
 part_relopt3_2_1 | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
(8 rows)

-- altering when changing am to heap should error out for root partition
ALTER TABLE part_relopt3 SET ACCESS METHOD heap, ALTER COLUMN a SET ENCODING (compresslevel=4, compresstype=rle_type);
ERROR:  ALTER COLUMN SET ENCODING operation is only applicable to AOCO tables
DETAIL:  New access method for "part_relopt3" is not ao_column
execute attribute_encoding_check('part_relopt3%');
     relname      | attname | filenum |                       attoptions                        
------------------+---------+---------+---------------------------------------------------------
 part_relopt3     | a       |       1 | {compresstype=zlib,compresslevel=2,blocksize=32768}
 part_relopt3     | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_1   | a       |       1 | {compresstype=rle_type,blocksize=32768,compresslevel=4}
 part_relopt3_1   | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
 part_relopt3_2   | a       |       1 | {compresstype=zlib,compresslevel=3,blocksize=32768}
 part_relopt3_2   | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_2_1 | a       |       1 | {compresslevel=4,compresstype=rle_type,blocksize=32768}
 part_relopt3_2_1 | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
(8 rows)

-- altering when changing am to heap should error out for child partition
ALTER TABLE part_relopt3_2_1 SET ACCESS METHOD heap, ALTER COLUMN a SET ENCODING (compresslevel=4, compresstype=rle_type);
ERROR:  ALTER COLUMN SET ENCODING operation is only applicable to AOCO tables
DETAIL:  New access method for "part_relopt3_2_1" is not ao_column
execute attribute_encoding_check('part_relopt3%');
     relname      | attname | filenum |                       attoptions                        
------------------+---------+---------+---------------------------------------------------------
 part_relopt3     | a       |       1 | {compresstype=zlib,compresslevel=2,blocksize=32768}
 part_relopt3     | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_1   | a       |       1 | {compresstype=rle_type,blocksize=32768,compresslevel=4}
 part_relopt3_1   | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
 part_relopt3_2   | a       |       1 | {compresstype=zlib,compresslevel=3,blocksize=32768}
 part_relopt3_2   | b       |       2 | {compresstype=zlib,compresslevel=5,blocksize=32768}
 part_relopt3_2_1 | a       |       1 | {compresslevel=4,compresstype=rle_type,blocksize=32768}
 part_relopt3_2_1 | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
(8 rows)

-- set access method and then alter column set encoding should generate same encoding values as
-- set access method + alter column set encoding
ALTER TABLE part_relopt3 SET ACCESS METHOD heap;
ALTER TABLE part_relopt3 SET ACCESS METHOD ao_column, ALTER COLUMN a SET ENCODING (compresslevel=4);
execute attribute_encoding_check('part_relopt3%');
     relname      | attname | filenum |                     attoptions                      
------------------+---------+---------+-----------------------------------------------------
 part_relopt3     | a       |       1 | {compresslevel=4,compresstype=zlib,blocksize=32768}
 part_relopt3     | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
 part_relopt3_1   | a       |       1 | {compresslevel=4,compresstype=zlib,blocksize=32768}
 part_relopt3_1   | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
 part_relopt3_2   | a       |       1 | {compresslevel=4,compresstype=zlib,blocksize=32768}
 part_relopt3_2   | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
 part_relopt3_2_1 | a       |       1 | {compresslevel=4,compresstype=zlib,blocksize=32768}
 part_relopt3_2_1 | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
(8 rows)

ALTER TABLE part_relopt3 SET ACCESS METHOD heap;
ALTER TABLE part_relopt3 SET ACCESS METHOD ao_column;
ALTER TABLE part_relopt3 ALTER COLUMN a SET ENCODING (compresslevel=4);
execute attribute_encoding_check('part_relopt3%');
     relname      | attname | filenum |                     attoptions                      
------------------+---------+---------+-----------------------------------------------------
 part_relopt3     | a       |       1 | {compresstype=none,blocksize=32768,compresslevel=4}
 part_relopt3     | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
 part_relopt3_1   | a       |    1601 | {compresstype=none,blocksize=32768,compresslevel=4}
 part_relopt3_1   | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
 part_relopt3_2   | a       |       1 | {compresstype=none,blocksize=32768,compresslevel=4}
 part_relopt3_2   | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
 part_relopt3_2_1 | a       |    1601 | {compresstype=none,blocksize=32768,compresslevel=4}
 part_relopt3_2_1 | b       |       2 | {compresstype=none,blocksize=32768,compresslevel=0}
(8 rows)

DROP TABLE part_relopt3;
