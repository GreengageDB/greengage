-- start_ignore
SELECT s.groupid, s.num_running, s.num_queueing, s.num_queued, s.num_executed FROM pg_resgroup_get_status(NULL::oid) s(groupid, num_running, num_queueing, num_queued, num_executed, total_queue_duration, cpu_usage, memory_usage);
 groupid | num_running | num_queueing | num_queued | num_executed 
---------+-------------+--------------+------------+--------------
(0 rows)
-- end_ignore
CREATE TEMP TABLE resgroup_function_test(LIKE gp_toolkit.gp_resgroup_status);
CREATE

INSERT INTO resgroup_function_test(groupid, num_running, num_queueing, num_queued, num_executed) SELECT s.groupid, s.num_running, s.num_queueing, s.num_queued, s.num_executed FROM pg_resgroup_get_status(NULL::oid) s(groupid, num_running, num_queueing, num_queued, num_executed, total_queue_duration, cpu_usage, memory_usage) LIMIT 1;
ERROR:  Cannot execute the pg_resgroup_get_status function in entrydb, this query is not currently supported by GPDB.  (entry db 127.0.0.1:6000 pid=93256)
HINT:  Call the function in subquery wrapped with unnest(array()). For example:
insert into tst_json
select * from unnest(array(
	select cpu_usage
	from pg_resgroup_get_status(NULL::oid)
));

INSERT INTO resgroup_function_test(groupid, num_running, num_queueing, num_queued, num_executed) SELECT (unnest).groupid, (unnest).num_running, (unnest).num_queueing, (unnest).num_queued, (unnest).num_executed FROM ( SELECT unnest(array( SELECT row('', groupid, num_running, num_queueing, num_queued, num_executed, total_queue_duration, cpu_usage, memory_usage)::resgroup_function_test FROM pg_resgroup_get_status(NULL::oid) LIMIT 1 )) ) a;
INSERT 1

SELECT count(num_executed)>0 FROM resgroup_function_test WHERE num_executed IS NOT NULL;
 ?column? 
----------
 t        
(1 row)

CREATE TEMP TABLE tst_json (cpu_usage json);
CREATE

INSERT INTO tst_json SELECT * FROM unnest(array( SELECT cpu_usage FROM pg_resgroup_get_status(NULL::oid) ));
INSERT 2
