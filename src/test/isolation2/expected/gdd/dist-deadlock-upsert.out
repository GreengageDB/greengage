-- See github issue: https://github.com/GreengageDB/greengage/issues/9449
-- insert into t values (x, x) on conflict (a, b) do update set b = yyy.
-- this kind of statement may lock tuples in segment and may lead to
-- global deadlock when GDD is enabled.

DROP TABLE IF EXISTS t_upsert;
DROP TABLE
CREATE TABLE t_upsert (id int, val int) distributed by (id);
CREATE TABLE
CREATE UNIQUE INDEX uidx_t_upsert on t_upsert(id, val);
CREATE INDEX
INSERT INTO t_upsert (id, val) SELECT i, i FROM generate_series(1, 100) i;
INSERT 0 100

-- gang creation order is important, reset any guc to force the creation
10: RESET optimizer;
RESET
20: RESET optimizer;
RESET

10: BEGIN;
BEGIN
20: BEGIN;
BEGIN

10: INSERT INTO t_upsert VALUES (segid(0,1), segid(0,1)) on conflict (id, val) do update set val = 999;
INSERT 0 1

20: INSERT INTO t_upsert VALUES (segid(1,1), segid(1,1)) on conflict (id, val) do update set val = 888;
INSERT 0 1

select gp_inject_fault('gdd_probe', 'suspend', dbid) from gp_segment_configuration where content=-1 and role='p';
 gp_inject_fault 
-----------------
 Success:        
(1 row)
select gp_wait_until_triggered_fault('gdd_probe', 1, dbid) from gp_segment_configuration where content=-1 and role='p';
 gp_wait_until_triggered_fault 
-------------------------------
 Success:                      
(1 row)
-- seg 0: con20 ==> con10, xid lock
20&: INSERT INTO t_upsert VALUES (segid(0,1), segid(0,1)) on conflict (id, val) do update set val = 666;  <waiting ...>

-- seg 1: con10 ~~> con20, tuple lock
10&: INSERT INTO t_upsert VALUES (segid(1,1), segid(1,1)) on conflict (id, val) do update set val = 777;  <waiting ...>

select gp_inject_fault('gdd_probe', 'reset', dbid) from gp_segment_configuration where content=-1 and role='p';
 gp_inject_fault 
-----------------
 Success:        
(1 row)
-- con20 will be cancelled by gdd
20<:  <... completed>
ERROR:  canceling statement due to user request: "cancelled by global deadlock detector"
20q: ... <quitting>

-- no more deadlock
10<:  <... completed>
INSERT 0 1
10q: ... <quitting>
